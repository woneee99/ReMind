<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.enjoytrip.dao.BoardDao">

    <select id="boardDetail" parameterType="int" resultType="com.example.enjoytrip.dto.BoardDto">
        SELECT b.boardId, b.userId, u.userName, b.title, b.content, b.createdAT, b.readCount
        FROM boards b, users u
        WHERE b.boardId = #{boardId}
          AND b.userId = u.userId
    </select>

    <select id="boardDetailFileList" parameterType="int" resultType="com.example.enjoytrip.dto.BoardFileDto">
        SELECT fileId, boardId, fileName, fileSzie, fileContentType, fileUrl, createdAt
        FROM boards_file
        WHERE boardId = #{boardId}
    </select>

    <!-- Dao use Dto -->
    <select id="boardUserReadCount" parameterType="map" resultType="int">
        SELECT count(*) FROM boards_users_read WHERE boardId = #{boardId} and userId = #{userId}
    </select>

    <!-- Dao use @param -->
    <insert id="boardUserReadInsert" parameterType="map">
        INSERT INTO boards_users_read ( boardId, userId )
        VALUES ( #{boardId}, #{userId} )
    </insert>

    <update id="boardReadCountUpdate" parameterType="int">
        UPDATE boards set readCount = readCount + 1
        WHERE boardId = #{boardId}
    </update>

    <delete id="boardDelete" parameterType="int">
        DELETE FROM boards WHERE boardId = #{boardId}
    </delete>

    <delete id="boardFileDelete" parameterType="int">
        DELETE FROM boards_file WHERE boardId = #{boardId}
    </delete>

    <update id="boardReadCountDelete" parameterType="int">
        DELETE FROM boards_users_read WHERE boardId = #{boardId}
    </update>

    <select id="boardFileUrlDeleteList" parameterType="int" resultType="string">
        SELECT fileUrl FROM boards_file WHERE boardId = #{boardId}
    </select>

    <insert id="boardInsert" parameterType="com.example.enjoytrip.dto.BoardDto" useGeneratedKeys="true" keyProperty="boardId">
        INSERT INTO boards ( userId, title, content, createdAt, readCount )
        VALUES ( #{userId}, #{title}, #{content}, now(), 0 )
    </insert>

    <insert id="boardFileInsert" parameterType="com.example.enjoytrip.dto.BoardFileDto">
        INSERT INTO boards_file ( boardId, fileName, fileSize, fileContentType, fileUrl )
        VALUES ( #{boardId}, #{fileName}, #{fileSize}, #{fileContentType}, #{fileUrl} )
    </insert>

    <!-- reg_dt : LocalDateTime, check out BoardDto setter  -->
    <select id="boardList" parameterType="map" resultType="com.example.enjoytrip.dto.BoardDto">
        SELECT b.boardId, b.userId, u.userName, b.title, b.content, b.createdAt, b.readCount
        FROM boards b, USERS u
        WHERE b.userId = u.userId
        ORDER BY b.boardId DESC
            LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="boardListTotalCount" resultType="int">
        SELECT COUNT(*)
        FROM boards
    </select>

    <select id="boardListSearchWord" parameterType="map" resultType="com.example.enjoytrip.dto.BoardDto">
        SELECT b.boardId, b.userId, u.userName, b.title, b.content, b.createdAt, b.readCount
        FROM boards b, USERS u
        WHERE b.userId = u.userId
          AND b.title LIKE CONCAT('%', #{searchWord} ,'%')
        ORDER BY b.boardId DESC
            LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="boardListSearchWordTotalCount" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM boards
        WHERE title LIKE CONCAT('%', #{searchWord} ,'%')
    </select>

    <update id="boardUpdate" parameterType="com.mycom.myboardexample.enjoytrip.dto.BoardDto">
        UPDATE boards
        SET title = #{title},
            content = #{content}
        WHERE boardId = #{boardId}
    </update>


















</mapper>